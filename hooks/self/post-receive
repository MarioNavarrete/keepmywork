#!/bin/bash

export DEPLOY_ALLOWED_BRANCH=master

while read oldrev newrev refname
do

    export DEPLOY_BRANCH=$(git rev-parse --symbolic --abbrev-ref $refname)
    export DEPLOY_OLDREV="$oldrev"
    export DEPLOY_NEWREV="$newrev"
    export DEPLOY_REFNAME="$refname"

    export GIT_DIR="$(cd $(dirname $(dirname $0));pwd)"
    export DEPLOY_REPONAME="$(basename ${GIT_DIR})"
    export DEPLOY_NAME="${DEPLOY_REPONAME%.git}"

    if [ ! -z "${DEPLOY_ALLOWED_BRANCH}" ]; then
        if [ "${DEPLOY_ALLOWED_BRANCH}" != "$DEPLOY_BRANCH" ]; then
            echo "githook: Branch '$DEPLOY_BRANCH' of '${DEPLOY_NAME}' docker will not be deployed. Exiting."
            exit 0
        fi
    fi

    export GIT_WORK_TREE=$HOME/keepmywork
    mkdir -p "${GIT_WORK_TREE}"

    git checkout -f "${DEPLOY_BRANCH}" || exit 1
    git reset --hard "$DEPLOY_NEWREV" || exit 1

    cd ${GIT_WORK_TREE}
    chmod 700 hooks/self/* hooks/general/*
    if [ ! -d $HOME/local/hooks/common/post-receive ]; then
    	mkdir -p $HOME/local/hooks/common
    	ln -s $HOME/keepmywork/hooks/general/* $HOME/local/hooks/common/
    	$HOME/bin/gitolite setup
    fi
    #for i in $(ls); do
    #    if [ -d /home/git/repositories/$i.git ]; then
    #	    rm /home/git/repositories/$i.git/hooks/post-receive
    #	    ln -s /home/git/docker-config/.hooks/general/post-receive /home/git/repositories/$i.git/hooks/
    #    fi
    #done    
    
done

