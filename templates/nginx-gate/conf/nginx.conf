worker_processes 10;

user nobody nogroup;
pid /tmp/nginx.pid;
error_log off;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex on; # set to 'on' if nginx worker_processes > 1
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log off;
  sendfile on;

  server {
    listen 80 default_server;
    listen 443 default;    
    server_name _ _.*;
    ssl_ciphers aNULL;
    ssl_certificate /etc/certs/nginx-cert.pem;
    ssl_certificate_key  /etc/certs/nginx-key.pem;
    #return 301 https://www.$hostname$request_uri;
    return 301 http://www.$hostname$request_uri;
    root /etc/default/web;
  }

  server {
    server_name www.*;

    listen 80;
    listen 443 ssl;
    ssl_certificate /etc/certs/nginx-cert.pem;
    ssl_certificate_key  /etc/certs/nginx-key.pem;

    keepalive_timeout 5;
    root /etc/default/web;
  }

  server {    
    server_name ~^(?<app>[^.]+)\.(?<domain>.+)$;

    resolver 127.0.0.11;

    listen 80;    
    listen 443 ssl;

    ssl_certificate /etc/certs/nginx-cert.pem;
    ssl_certificate_key  /etc/certs/nginx-key.pem;

    client_max_body_size 10M;
    keepalive_timeout 5;
    root /etc/default/web;

    location / {
      if ( $domain != $hostname ) {
        return 301 http://www.$hostname$request_uri;
      }
      set $upstream http://$app:80;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_buffering off;
      proxy_pass $upstream;
    }
  }

}

